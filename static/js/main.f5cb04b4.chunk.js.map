{"version":3,"sources":["logo.svg","components/timer.js","App.js","reportWebVitals.js","index.js"],"names":["Timer","timer","useState","background","setBackground","newTime","Date","date","getDate","month","getMonth","year","getFullYear","firstTimer","getHours","getMinutes","getSeconds","timerFunc","time","hour","minutes","seconds","displayTime","document","getElementById","innerHTML","displayTimer","setTimeout","resumeTimer","useEffect","className","onChange","e","target","value","id","onClick","clearTimeout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"mMAAe,I,mBCuDAA,MArDf,WACI,IAKCC,EALD,EAAoCC,mBAAS,SAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACCC,EAAU,IAAIC,KACdC,EAAOF,EAAQG,UACfC,EAAQJ,EAAQK,WAChBC,EAAON,EAAQO,cAEVC,EAAU,UAAMN,EAAN,YAAcE,EAAd,YAAuBE,EAAvB,YAA+BN,EAAQS,WAAvC,cAAuDT,EAAQU,aAA/D,cAAiFV,EAAQW,cAY5G,SAASC,KATY,WACpB,IAAIC,EAAO,IAAIZ,KACXa,EAAOD,EAAKJ,WACZM,EAAUF,EAAKH,aACfM,EAAUH,EAAKF,aACfM,EAAW,UAAMH,EAAN,cAAgBC,EAAhB,cAA6BC,GAC5CE,SAASC,eAAe,cAAcC,UAAtC,UAAqDlB,EAArD,YAA6DE,EAA7D,YAAsEE,EAAtE,YAA8EW,GAI9EI,GACAzB,EAAQ0B,YAAW,WAClBV,MACC,KAEH,IAAMW,EAAc,WACnBX,KAUD,OAJAY,qBAAU,WACTD,MACC,IAGD,sBAAKE,UAAS,yBAAoB3B,GAAlC,UACC,qBAAK2B,UAAU,WAAf,SACC,yBAAQC,SAAU,SAACC,GAAD,OAAO5B,EAAc4B,EAAEC,OAAOC,QAAhD,UACC,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,uBAGF,qBAAKC,GAAG,aAAaL,UAAU,aAA/B,SACEjB,IAEF,wBAAQuB,QAnBQ,WACjBC,aAAapC,IAkBZ,kBACA,wBAAQmC,QAASR,EAAjB,wBCvCYU,MANf,WACG,OACD,cAAC,EAAD,KCKaC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3B,SAASC,eAAe,SAM1Be,K","file":"static/js/main.f5cb04b4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect} from 'react';\n\nfunction Timer() {\n    const [background, setBackground] = useState('light');\n\tlet newTime = new Date();\n\tlet date = newTime.getDate();\n\tlet month = newTime.getMonth();\n\tlet year = newTime.getFullYear();\n\tlet timer;\n    const firstTimer = `${date}/${month}/${year} ${newTime.getHours()} : ${newTime.getMinutes()} : ${newTime.getSeconds()}`;\n    // const firstTimer = new Date().toString();\n\t\n\tconst displayTimer = () => {\n\t\tlet time = new Date();\n\t\tlet hour = time.getHours();\n\t\tlet minutes = time.getMinutes();\n\t\tlet seconds = time.getSeconds();\n\t\tlet displayTime = `${hour} : ${minutes} : ${seconds}`\n\t\tdocument.getElementById('time-block').innerHTML = `${date}/${month}/${year} ${displayTime}`;\n\t\t// console.log(str)\n\t}\n\tfunction timerFunc() {\n\t\tdisplayTimer();\n\t\ttimer = setTimeout(() => {\n\t\t\ttimerFunc();\n\t\t},1000)\n\t}\n\tconst resumeTimer = () => {\n\t\ttimerFunc();\n\t}\n\tconst stopTimer = () => {\n\t\tclearTimeout(timer);\n\t\treturn;\n\t}\n\tuseEffect(() => {\n\t\tresumeTimer();\n\t},[])\n\n\treturn (\n\t\t<div className={`main-container ${background}`}>\n\t\t\t<div className=\"dropdown\">\n\t\t\t\t<select onChange={(e) => setBackground(e.target.value)}>\n\t\t\t\t\t<option value=\"white\">Light</option>\n\t\t\t\t\t<option value=\"black\">Dark</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div id=\"time-block\" className=\"time-block\">\n\t\t\t\t{firstTimer}\n\t\t\t</div>\n\t\t\t<button onClick={stopTimer}>stop</button>\n\t\t\t<button onClick={resumeTimer}>resume</button>\n\t\t</div>\n\t);\n}\n\nexport default Timer;\n","import logo from './logo.svg';\nimport './App.css';\nimport { useEffect } from 'react';\nimport Timer from './components/timer';\n\nfunction App() {\n  \treturn (\n\t\t<Timer />\n\t)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}