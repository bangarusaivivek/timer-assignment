{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","timer","str","Date","toString","time","date","getDate","month","getMonth","year","getFullYear","timerFunc","hour","getHours","minutes","getMinutes","seconds","getSeconds","displayTime","document","getElementById","innerHTML","displayTimer","setTimeout","resumeTimer","useEffect","className","id","onClick","clearTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"8KAAe,I,WCiDAA,MA7Cf,WACE,IAKGC,EALCC,GAAM,IAAIC,MAAOC,WAClBC,EAAO,IAAIF,KACXG,EAAOD,EAAKE,UACZC,EAAQH,EAAKI,WACbC,EAAOL,EAAKM,cAYhB,SAASC,KATY,WACpB,IAAIP,EAAO,IAAIF,KACXU,EAAOR,EAAKS,WACZC,EAAUV,EAAKW,aACfC,EAAUZ,EAAKa,aACfC,EAAW,UAAMN,EAAN,cAAgBE,EAAhB,cAA6BE,GAC5CG,SAASC,eAAe,cAAcC,UAAtC,UAAqDhB,EAArD,YAA6DE,EAA7D,YAAsEE,EAAtE,YAA8ES,GAI9EI,GACAtB,EAAQuB,YAAW,WAClBZ,MACC,KAEH,IAAMa,EAAc,WACnBb,KAUD,OAJCc,qBAAU,WACRD,MACA,IAGF,sBAAKE,UAAU,iBAAf,UACC,qBAAKC,GAAG,aAAaD,UAAU,aAA/B,SACEzB,IAEF,wBAAQ2B,QAbQ,WACjBC,aAAa7B,IAYZ,kBACA,wBAAQ4B,QAASJ,EAAjB,wBChCYM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASC,eAAe,SAM1BU,K","file":"static/js/main.c057cf1d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useEffect } from 'react';\n\nfunction App() {\n  let str = new Date().toString();\n\tlet time = new Date();\n\tlet date = time.getDate();\n\tlet month = time.getMonth();\n\tlet year = time.getFullYear();\n\tlet timer;\n\t\n\tconst displayTimer = () => {\n\t\tlet time = new Date();\n\t\tlet hour = time.getHours();\n\t\tlet minutes = time.getMinutes();\n\t\tlet seconds = time.getSeconds();\n\t\tlet displayTime = `${hour} : ${minutes} : ${seconds}`\n\t\tdocument.getElementById('time-block').innerHTML = `${date}/${month}/${year} ${displayTime}`;\n\t\t// console.log(str)\n\t}\n\tfunction timerFunc() {\n\t\tdisplayTimer();\n\t\ttimer = setTimeout(() => {\n\t\t\ttimerFunc();\n\t\t},1000)\n\t}\n\tconst resumeTimer = () => {\n\t\ttimerFunc();\n\t}\n\tconst stopTimer = () => {\n\t\tclearTimeout(timer);\n\t\treturn;\n\t}\n  useEffect(() => {\n    resumeTimer();\n  },[])\n\n\treturn (\n\t\t<div className=\"main-container\">\n\t\t\t<div id=\"time-block\" className=\"time-block\">\n\t\t\t\t{str}\n\t\t\t</div>\n\t\t\t<button onClick={stopTimer}>stop</button>\n\t\t\t<button onClick={resumeTimer}>resume</button>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}